#!/bin/bash

#$1 dbpedia 
#$2 output folder

if [ "$#" -ne 2 ]; then
  echo "Illegal number of parameters"
  echo "Usage: make_hdt [dbpedia] [output-folder]"
  exit 1
fi

ABSOLUTE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "${1}"
source $ROOT/env/c++/hdt

output_dir="${2}"
output_file="${name}"
if [ ! -d $output_dir ]; then
  echo "Creating $output_dir folder"
  mkdir -p $output_dir
fi

for file in $files 
do
  if [ ! -f "$output_dir/${file}_${language}.${format}" ]; then
    if [ ! -f "$output_dir/${file}_${language}.${format}.$compression" ]; then
      echo "Getting: ${url_prefix_path}/${file}_${language}.${format}.${compression}"
      curl -o "${output_dir}/${file}_${language}.${format}.${compression}"  -O "${url_prefix_path}/${file}_${language}.${format}.${compression}" --progress-bar
    fi
    echo "Unzipping $file"
    bunzip2 "${output_dir}/${file}_${language}.${format}.$compression"
  fi
done

# Get additional files
for file in $additional_files
do
  if [ ! -f "$output_dir/$file" ]; then
    echo "Getting: ${url_prefix}/${file}"
    curl -o ${output_dir}/${file} -O ${url_prefix}/${file} --progress-bar
  fi
done

# Join into one file
if [ -f "$output_dir/$output_file.${format}" ]; then
  echo "Removing previous output file"
  rm "$output_dir/$output_file.${format}"
fi
echo "Merging files"
for file in $files
do
  echo "${file}_${language}.${format}"
  cat $output_dir/${file}_${language}.${format} >> $output_dir/$output_file.${format}
done
for file in $additional_files
do
  echo $file
  cat $output_dir/$file >> $output_dir/$output_file.${format}
done

# use hdt
if [ -f "$output_dir/$output_file.hdt" ]; then
  echo "Removing previous hdt output file"
  rm "$output_dir/$output_file.hdt"
fi

echo "Transforming into hdt"

rdf2hdt -i -f ntriples "$output_dir/$output_file.${format}" "$output_dir/$output_file.hdt"
