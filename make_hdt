#!/bin/bash

#$1 dbpedia 
#$2 output folder

if [ "$#" -ne 2 ]; then
  echo "Illegal number of parameters"
  echo "Usage: make_hdt [dbpedia] [output-folder]"
  exit 1
fi

ABSOLUTE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "${1}"
source $ROOT/env/c++/hdt
source $ROOT/env/c++/parallel

max_processes=4
output_dir="${2}"
output_file="${name}"
if [ ! -d $output_dir ]; then
  echo "Creating $output_dir folder"
  mkdir -p $output_dir
fi

for file in $files 
do
  #if [ ! -f "$output_dir/${file}_${language}.${format}" ]; then
    if [ ! -f "$output_dir/${file}_${language}.${format}.$compression" ]; then
      echo "Getting: ${url_prefix_path}/${file}_${language}.${format}.${compression}"
      curl -o "${output_dir}/${file}_${language}.${format}.${compression}"  -O "${url_prefix_path}/${file}_${language}.${format}.${compression}" --progress-bar
    fi
    #echo "Unzipping $file"
    #bunzip2 "${output_dir}/${file}_${language}.${format}.$compression"
  #fi
done

# Get additional files
for file in $additional_files
do
  if [ ! -f "$output_dir/$file" ]; then
    echo "Getting: ${url_prefix}/${file}"
    curl -o ${output_dir}/${file} -O ${url_prefix}/${file} --progress-bar
  fi
done

# Join into one file
if [ ! -f "$output_dir/$output_file.${format}" ]; then
  echo "Merging files"
  parallel --bar -j ${max_processes} bzcat ${output_dir}/{1}_${language}.${format}.${compression} \
	 ::: ${files} \
	 > ${output_dir}/${output_file}.${format}
  #for file in $files
  #do
  ##  echo "${file}_${language}.${format}"
  #  bzcat $output_dir/${file}_${language}.${format}.${compression} >> $output_dir/$output_file.${format}
  #done
  echo "Adding additional files"
  for file in $additional_files
  do
    echo $file
    tool=cat
    if file --mime-type $file | grep -q gzip$; then tool=bzcat; fi
    $tool $output_dir/$file >> $output_dir/$output_file.${format}
  done
fi

# use hdt
if [ -f "$output_dir/$output_file.hdt" ]; then
  echo "Removing previous hdt output file"
  rm "$output_dir/$output_file.hdt"
fi

echo "Transforming into hdt"
rdf2hdt -f ntriples "$output_dir/${output_file}.${format}" "$output_dir/${output_file}.hdt"

echo "Force Index Creation"
hdtSearch -q "a" "$output_dir/$output_file.hdt"
